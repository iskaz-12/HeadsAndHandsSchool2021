// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class WeatherJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Weather>() {
  private val options: JsonReader.Options = JsonReader.Options.of("id", "main", "description",
      "icon")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "id")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "main")

  public override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("Weather").append(')') }

  public override fun fromJson(reader: JsonReader): Weather {
    var id: Int? = null
    var main: String? = null
    var description: String? = null
    var icon: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> id = nullableIntAdapter.fromJson(reader)
        1 -> main = nullableStringAdapter.fromJson(reader)
        2 -> description = nullableStringAdapter.fromJson(reader)
        3 -> icon = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return Weather(
        id = id,
        main = main,
        description = description,
        icon = icon
    )
  }

  public override fun toJson(writer: JsonWriter, value_: Weather?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("id")
    nullableIntAdapter.toJson(writer, value_.id)
    writer.name("main")
    nullableStringAdapter.toJson(writer, value_.main)
    writer.name("description")
    nullableStringAdapter.toJson(writer, value_.description)
    writer.name("icon")
    nullableStringAdapter.toJson(writer, value_.icon)
    writer.endObject()
  }
}
